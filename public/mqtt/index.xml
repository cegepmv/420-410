<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MQTT :: Introduction aux plateformes IdO</title>
    <link>http://localhost:1313/420-410/mqtt/index.html</link>
    <description>Description Utilisation</description>
    <generator>Hugo</generator>
    <language>fr-ca</language>
    <lastBuildDate>Sun, 07 Apr 2024 15:56:18 -0400</lastBuildDate>
    <atom:link href="http://localhost:1313/420-410/mqtt/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Description</title>
      <link>http://localhost:1313/420-410/mqtt/intro/index.html</link>
      <pubDate>Wed, 13 Mar 2024 09:49:18 -0400</pubDate>
      <guid>http://localhost:1313/420-410/mqtt/intro/index.html</guid>
      <description>Le protocole MQTT, pour Message Queuing Telemetry Transport, est un protocole conçu pour les objets connectés: il est simple à mettre en place et à utiliser et consomme peu de ressources et de bande passante. Il permet une communication facile entre un ensemble d’objets connectés et les différentes applications qui les utilisent.&#xA;Modèle de communication En MQTT, les objets connectés et les applications sont des clients; il se connectent à un serveur (aussi appelé “broker” ou agent) qui gère la communication entre eux:</description>
    </item>
    <item>
      <title>Utilisation</title>
      <link>http://localhost:1313/420-410/mqtt/utilisation/index.html</link>
      <pubDate>Thu, 14 Mar 2024 11:51:44 -0400</pubDate>
      <guid>http://localhost:1313/420-410/mqtt/utilisation/index.html</guid>
      <description>Pour le cours, SVP utilisez l’agent MQTT disponible sur le réseau interne au nom mqttbroker.lan.&#xA;Dans ce cours nous utiliserons Mosquitto. Cette implémentation de MQTT, développée par la fondation Eclipse, fournit des utilitaires de ligne de commande pour envoyer et recevoir des messages (mosquitto_pub et mosquitto_sub), et aussi des librairies permettant d’implémenter des clients MQTT en C/C++.&#xA;Agent MQTT Mosquitto Pour installer le service mosquitto, lancez la commande suivante:&#xA;apt update apt install mosquitto Configuration de base Les paramètres de configuration de mosquitto sont définis dans le fichier /etc/mosquitto/mosquitto.conf.</description>
    </item>
    <item>
      <title>Projet 2</title>
      <link>http://localhost:1313/420-410/mqtt/projet2/index.html</link>
      <pubDate>Wed, 20 Mar 2024 13:15:44 -0400</pubDate>
      <guid>http://localhost:1313/420-410/mqtt/projet2/index.html</guid>
      <description>Préalables Connectez un senseur de luminosité à votre Pi.&#xA;Vous devez faire 2 programmes:&#xA;p2_pub: Publie chaque 10 secondes dans la rubrique p2 la valeur de luminosité lue sur le senseur; p2_sub: À partir des données lues sur tous les Pi, affiche le nom du Pi d’où est lue la valeur maximale, et la moyenne de toutes les valeurs. Spécifications: Le message publié doit avoir le format HOTE|VALEUR. HOTE est le hostname du Pi et VALEUR est le pourcentage de luminosité (un nombre entier entre 0 et 100). Les informations doivent s’afficher comme suit, à intervalles réguliers, sur la console lorsque vous exécutez le programme: Max: denis (93) Moy: 60.40 ------------- Max: WuJitsu (56) Moy: 24.60 ------------- Max: Equipe 3 (72) Moy: 34.20 -------------</description>
    </item>
    <item>
      <title>Sécurité</title>
      <link>http://localhost:1313/420-410/mqtt/securite/index.html</link>
      <pubDate>Sun, 07 Apr 2024 15:56:18 -0400</pubDate>
      <guid>http://localhost:1313/420-410/mqtt/securite/index.html</guid>
      <description>Pour sécuriser les communications en MQTT, on utilise les mêmes méthodes que pour n’importe quel autre protocole, c’est-à-dire: l’authentification et le chiffrement.&#xA;Ces deux méthodes sont appliquées indépendamment l’une de l’autre: en effet, on peut avoir des communications chiffrées sans authentification, ou au contraire authentifiées mais sans chiffrement. Évidemment, il est recommandé d’utiliser les deux.&#xA;Dans cette section, nous allons décrire le fonctionnement de chacune de ces méthodes puis nous expliquerons comment les appliquer aux clients et aux agents MQTT.</description>
    </item>
  </channel>
</rss>