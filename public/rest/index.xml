<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>REST :: Introduction aux plateformes IdO</title>
    <link>http://localhost:1313/420-410/rest/index.html</link>
    <description>Dans cette section nous verrons comment mettre en place une API REST simple sur le RaspberryPi afin de contrôler différents modules à partir d’une application web.&#xA;API Installation</description>
    <generator>Hugo</generator>
    <language>fr-ca</language>
    <lastBuildDate>Mon, 04 Mar 2024 18:45:29 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/420-410/rest/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Installation</title>
      <link>http://localhost:1313/420-410/rest/installation/index.html</link>
      <pubDate>Mon, 04 Mar 2024 08:04:13 -0500</pubDate>
      <guid>http://localhost:1313/420-410/rest/installation/index.html</guid>
      <description>Pour contrôler à distance des modules connectés sur le Pi, une technique consiste à utiliser une API. À partir d’une page web, on pourra ainsi faire des appels d’API pour allumer une LED, activer des servos, lire les données d’un capteur, etc.&#xA;Cette API doit donc s’exécuter sur le Pi. Pour cela nous utilisersons Node et Express.&#xA;Installation Node Sur le Pi, en tant que root, installez Node et le gestionnaire de paquets npm:</description>
    </item>
    <item>
      <title>API</title>
      <link>http://localhost:1313/420-410/rest/api/index.html</link>
      <pubDate>Mon, 04 Mar 2024 18:45:29 -0500</pubDate>
      <guid>http://localhost:1313/420-410/rest/api/index.html</guid>
      <description>Puisqu’on veut avoir une API, il faut définir ses points terminaux (“endpoints”). Il s’agit donc de créer les routes correspondantes et d’y ajouter le code nécessaire pour envoyer ou recevoir des données au format JSON.&#xA;/info À titre d’exemple, nous allons créer un premier point terminal pour afficher des informations sur l’hôte, soit son nom et la date et l’heure du système. On souhaite que les données retournées aient le format suivant:</description>
    </item>
  </channel>
</rss>